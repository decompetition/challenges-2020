"alloc_task":
  "asm": |
    alloc_task:
      endbr64
      push    rbp
      mov     rbp, rsp
      sub     rsp, 0x30
      mov     [rbp-0x18], rdi
      mov     [rbp-0x1c], esi
      mov     [rbp-0x28], rdx
      mov     edi, 0x18
      call    malloc@plt.sec
      mov     [rbp-8], rax
      mov     rax, [rbp-0x18]
      mov     rdi, rax
      call    strlen@plt.sec
      add     rax, 1
      mov     rdi, rax
      call    malloc@plt.sec
      mov     rdx, rax
      mov     rax, [rbp-8]
      mov     [rax+0x10], rdx
      mov     rax, [rbp-8]
      mov     rax, [rax+0x10]
      mov     rdx, [rbp-0x18]
      mov     rsi, rdx
      mov     rdi, rax
      call    strcpy@plt.sec
      mov     rax, [rbp-8]
      mov     edx, [rbp-0x1c]
      mov     [rax+8], edx
      mov     rax, [rbp-8]
      mov     rdx, [rbp-0x28]
      mov     [rax], rdx
      mov     rax, [rbp-8]
      leave
      ret
"find_rootkit":
  "asm": |
    find_rootkit:
      endbr64
      push    rbp
      mov     rbp, rsp
      sub     rsp, 0x10
      mov     [rbp-8], rdi
      cmp     [rbp-8], 0
      jne     block2
    block1:
      mov     eax, 0xffffffff
      jmp     block7
    block2:
      mov     rax, [rbp-8]
      mov     eax, [rax+8]
      cmp     eax, 0x539
      jne     block5
    block3:
      mov     rax, [rbp-8]
      mov     rax, [rax+0x10]
      lea     rsi, [mem1]; "h4x0r"
      mov     rdi, rax
      call    strcmp@plt.sec
      test    eax, eax
      jne     block5
    block4:
      mov     eax, 1
      jmp     block7
    block5:
      mov     rax, [rbp-8]
      mov     rax, [rax]
      mov     [rbp-8], rax
      cmp     [rbp-8], 0
      jne     block2
    block6:
      mov     eax, 0
    block7:
      leave
      ret
"main":
  "asm": |
    main:
      endbr64
      push    rbp
      mov     rbp, rsp
      sub     rsp, 0x70
      mov     [rbp-0x64], edi
      mov     [rbp-0x70], rsi
      mov     rax, fs:[0x28]
      mov     [rbp-8], rax
      xor     eax, eax
      mov     [rbp-0x58], 0
      jmp     block2
    block1:
      mov     ecx, [rbp-0x60]
      mov     rdx, [rbp-0x58]
      lea     rax, [rbp-0x50]
      mov     esi, ecx
      mov     rdi, rax
      call    alloc_task
      mov     [rbp-0x58], rax
    block2:
      lea     rdx, [rbp-0x60]
      lea     rax, [rbp-0x50]
      mov     rsi, rax
      lea     rdi, [mem1]; "%s %d"
      mov     eax, 0
      call    __isoc99_scanf@plt.sec
      cmp     eax, 2
      je      block1
    block3:
      mov     rax, [rbp-0x58]
      mov     rdi, rax
      call    find_rootkit
      mov     [rbp-0x5c], eax
      mov     eax, [rbp-0x5c]
      mov     esi, eax
      lea     rdi, [mem2]; "find_rootkit() = %d\n"
      mov     eax, 0
      call    printf@plt.sec
      mov     eax, 0
      mov     rcx, [rbp-8]
      xor     rcx, fs:[0x28]
      je      block5
    block4:
      call    __stack_chk_fail@plt.sec
    block5:
      leave
      ret
