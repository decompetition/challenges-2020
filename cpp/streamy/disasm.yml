"_Z11get_istreamiPPc":
  "asm": |
    _Z11get_istreamiPPc:
      endbr64
      push    rbp
      mov     rbp, rsp
      push    r13
      push    r12
      push    rbx
      sub     rsp, 0x58
      mov     [rbp-0x64], edi
      mov     [rbp-0x70], rsi
      mov     rax, fs:[0x28]
      mov     [rbp-0x28], rax
      xor     eax, eax
      mov     ebx, 0
      mov     r12d, 0
      cmp     [rbp-0x64], 1
      jle     block2
    block1:
      lea     rax, [rbp-0x51]
      mov     rdi, rax
      call    _ZNSaIcEC1Ev@plt.sec
      mov     ebx, 1
      lea     rdx, [rbp-0x51]
      lea     rax, [rbp-0x50]
      lea     rsi, [mem1]; "-"
      mov     rdi, rax
      call    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
      mov     r12d, 1
      mov     rax, [rbp-0x70]
      add     rax, 8
      mov     rax, [rax]
      lea     rdx, [rbp-0x50]
      mov     rsi, rdx
      mov     rdi, rax
      call    _ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
      test    al, al
      je      block3
    block2:
      mov     r13d, 1
      jmp     block4
    block3:
      mov     r13d, 0
    block4:
      test    r12b, r12b
      je      block6
    block5:
      lea     rax, [rbp-0x50]
      mov     rdi, rax
      call    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt.sec
    block6:
      test    bl, bl
      je      block8
    block7:
      lea     rax, [rbp-0x51]
      mov     rdi, rax
      call    _ZNSaIcED1Ev@plt.sec
    block8:
      test    r13b, r13b
      je      block10
    block9:
      lea     rax, [_ZSt3cin]
      jmp     block11
    block10:
      mov     edi, 0x208
      call    _Znwm@plt.sec
      mov     rbx, rax
      mov     rax, [rbp-0x70]
      add     rax, 8
      mov     rax, [rax]
      mov     edx, 8
      mov     rsi, rax
      mov     rdi, rbx
      call    _ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode@plt.sec
      mov     rax, rbx
    block11:
      mov     rcx, [rbp-0x28]
      xor     rcx, fs:[0x28]
      je      block19
    block12:
      jmp     block18
    block13:
      endbr64
      mov     r13, rax
      test    r12b, r12b
      je      block15
    block14:
      lea     rax, [rbp-0x50]
      mov     rdi, rax
      call    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt.sec
    block15:
      mov     r12, r13
      test    bl, bl
      je      block17
    block16:
      lea     rax, [rbp-0x51]
      mov     rdi, rax
      call    _ZNSaIcED1Ev@plt.sec
    block17:
      mov     rax, r12
      mov     rdi, rax
      call    _Unwind_Resume@plt.sec
      endbr64
      mov     r12, rax
      mov     esi, 0x208
      mov     rdi, rbx
      call    _ZdlPvm@plt.sec
      mov     rax, r12
      mov     rdi, rax
      call    _Unwind_Resume@plt.sec
    block18:
      call    __stack_chk_fail@plt.sec
    block19:
      add     rsp, 0x58
      pop     rbx
      pop     r12
      pop     r13
      pop     rbp
      ret
"_Z11get_ostreamiPPc":
  "asm": |
    _Z11get_ostreamiPPc:
      endbr64
      push    rbp
      mov     rbp, rsp
      push    r13
      push    r12
      push    rbx
      sub     rsp, 0x58
      mov     [rbp-0x64], edi
      mov     [rbp-0x70], rsi
      mov     rax, fs:[0x28]
      mov     [rbp-0x28], rax
      xor     eax, eax
      mov     ebx, 0
      mov     r12d, 0
      cmp     [rbp-0x64], 2
      jle     block2
    block1:
      lea     rax, [rbp-0x51]
      mov     rdi, rax
      call    _ZNSaIcEC1Ev@plt.sec
      mov     ebx, 1
      lea     rdx, [rbp-0x51]
      lea     rax, [rbp-0x50]
      lea     rsi, [mem1]; "-"
      mov     rdi, rax
      call    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2IS3_EEPKcRKS3_
      mov     r12d, 1
      mov     rax, [rbp-0x70]
      add     rax, 0x10
      mov     rax, [rax]
      lea     rdx, [rbp-0x50]
      mov     rsi, rdx
      mov     rdi, rax
      call    _ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE
      test    al, al
      je      block3
    block2:
      mov     r13d, 1
      jmp     block4
    block3:
      mov     r13d, 0
    block4:
      test    r12b, r12b
      je      block6
    block5:
      lea     rax, [rbp-0x50]
      mov     rdi, rax
      call    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt.sec
    block6:
      test    bl, bl
      je      block8
    block7:
      lea     rax, [rbp-0x51]
      mov     rdi, rax
      call    _ZNSaIcED1Ev@plt.sec
    block8:
      test    r13b, r13b
      je      block10
    block9:
      lea     rax, [_ZSt4cout]
      jmp     block11
    block10:
      mov     edi, 0x200
      call    _Znwm@plt.sec
      mov     rbx, rax
      mov     rax, [rbp-0x70]
      add     rax, 0x10
      mov     rax, [rax]
      mov     edx, 0x10
      mov     rsi, rax
      mov     rdi, rbx
      call    _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode@plt.sec
      mov     rax, rbx
    block11:
      mov     rcx, [rbp-0x28]
      xor     rcx, fs:[0x28]
      je      block19
    block12:
      jmp     block18
    block13:
      endbr64
      mov     r13, rax
      test    r12b, r12b
      je      block15
    block14:
      lea     rax, [rbp-0x50]
      mov     rdi, rax
      call    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt.sec
    block15:
      mov     r12, r13
      test    bl, bl
      je      block17
    block16:
      lea     rax, [rbp-0x51]
      mov     rdi, rax
      call    _ZNSaIcED1Ev@plt.sec
    block17:
      mov     rax, r12
      mov     rdi, rax
      call    _Unwind_Resume@plt.sec
      endbr64
      mov     r12, rax
      mov     esi, 0x200
      mov     rdi, rbx
      call    _ZdlPvm@plt.sec
      mov     rax, r12
      mov     rdi, rax
      call    _Unwind_Resume@plt.sec
    block18:
      call    __stack_chk_fail@plt.sec
    block19:
      add     rsp, 0x58
      pop     rbx
      pop     r12
      pop     r13
      pop     rbp
      ret
"main":
  "asm": |
    main:
      endbr64
      push    rbp
      mov     rbp, rsp
      push    r13
      push    r12
      push    rbx
      sub     rsp, 0x258
      mov     [rbp-0x264], edi
      mov     [rbp-0x270], rsi
      mov     rax, fs:[0x28]
      mov     [rbp-0x28], rax
      xor     eax, eax
      mov     rdx, [rbp-0x270]
      mov     eax, [rbp-0x264]
      mov     rsi, rdx
      mov     edi, eax
      call    _Z11get_istreamiPPc
      mov     [rbp-0x248], rax
      mov     rdx, [rbp-0x270]
      mov     eax, [rbp-0x264]
      mov     rsi, rdx
      mov     edi, eax
      call    _Z11get_ostreamiPPc
      mov     [rbp-0x240], rax
      lea     rax, [rbp-0x1f0]
      mov     rdi, rax
      call    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt.sec
    block1:
      lea     rdx, [rbp-0x1f0]
      mov     rax, [rbp-0x248]
      mov     rsi, rdx
      mov     rdi, rax
      call    _ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt.sec
      mov     rdx, [rax]
      sub     rdx, 0x18
      mov     rdx, [rdx]
      add     rax, rdx
      mov     rdi, rax
      call    _ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv@plt.sec
      test    al, al
      je      block21
    block2:
      lea     rcx, [rbp-0x1f0]
      lea     rax, [rbp-0x1b0]
      mov     edx, 8
      mov     rsi, rcx
      mov     rdi, rax
      call    _ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode@plt.sec
      lea     rax, [rbp-0x210]
      mov     rdi, rax
      call    _ZNSt6vectorIP4NodeSaIS1_EEC2Ev
      lea     rax, [rbp-0x1d0]
      mov     rdi, rax
      call    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev@plt.sec
    block3:
      lea     rdx, [rbp-0x1d0]
      lea     rax, [rbp-0x1b0]
      mov     rsi, rdx
      mov     rdi, rax
      call    _ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE@plt.sec
      mov     rdx, [rax]
      sub     rdx, 0x18
      mov     rdx, [rdx]
      add     rax, rdx
      mov     rdi, rax
      call    _ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv@plt.sec
      test    al, al
      je      block11
    block4:
      lea     rax, [rbp-0x1d0]
      mov     rsi, rax
      lea     rdi, [_Z10PRECEDENCEB5cxx11]
      call    _ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEE5countERS9_
      test    rax, rax
      setne   al
      test    al, al
      je      block8
    block5:
      lea     rax, [rbp-0x210]
      mov     rdi, rax
      call    _ZNKSt6vectorIP4NodeSaIS1_EE4sizeEv
      cmp     rax, 1
      setbe   al
      test    al, al
      je      block7
    block6:
      mov     edi, 0x10
      call    __cxa_allocate_exception@plt.sec
      mov     rbx, rax
      lea     rsi, [mem1]; "Not enough operands."
      mov     rdi, rbx
      call    _ZNSt15underflow_errorC1EPKc@plt.sec
      mov     rax, [_ZNSt15underflow_errorD1Ev]
      mov     rdx, rax
      lea     rsi, [_ZTISt15underflow_error]
      mov     rdi, rbx
      call    __cxa_throw@plt.sec
    block7:
      lea     rax, [rbp-0x210]
      mov     rdi, rax
      call    _ZNSt6vectorIP4NodeSaIS1_EE4backEv
      mov     rax, [rax]
      mov     [rbp-0x238], rax
      lea     rax, [rbp-0x210]
      mov     rdi, rax
      call    _ZNSt6vectorIP4NodeSaIS1_EE8pop_backEv
      lea     rax, [rbp-0x210]
      mov     rdi, rax
      call    _ZNSt6vectorIP4NodeSaIS1_EE4backEv
      mov     rax, [rax]
      mov     [rbp-0x230], rax
      lea     rax, [rbp-0x210]
      mov     rdi, rax
      call    _ZNSt6vectorIP4NodeSaIS1_EE8pop_backEv
      mov     edi, 0x40
      call    _Znwm@plt.sec
      mov     rbx, rax
      mov     rcx, [rbp-0x238]
      mov     rdx, [rbp-0x230]
      lea     rax, [rbp-0x1d0]
      mov     rsi, rax
      mov     rdi, rbx
      call    _ZN8OperatorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP4NodeS9_
      mov     [rbp-0x250], rbx
      lea     rdx, [rbp-0x250]
      lea     rax, [rbp-0x210]
      mov     rsi, rdx
      mov     rdi, rax
      call    _ZNSt6vectorIP4NodeSaIS1_EE9push_backEOS1_
      jmp     block3
    block8:
      mov     [rbp-0x258], 0
      lea     rax, [rbp-0x1d0]
      mov     rdi, rax
      call    _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv@plt.sec
      mov     rcx, rax
      lea     rax, [rbp-0x258]
      mov     edx, 0
      mov     rsi, rax
      mov     rdi, rcx
      call    strtol@plt.sec
      mov     rax, [rbp-0x258]
      movzx   eax, [rax]
      test    al, al
      je      block10
    block9:
      mov     edi, 0x10
      call    __cxa_allocate_exception@plt.sec
      mov     rbx, rax
      lea     rsi, [mem2]; "Unknown token."
      mov     rdi, rbx
      call    _ZNSt13runtime_errorC1EPKc@plt.sec
      mov     rax, [_ZNSt13runtime_errorD1Ev]
      mov     rdx, rax
      lea     rsi, [_ZTISt13runtime_error]
      mov     rdi, rbx
      call    __cxa_throw@plt.sec
    block10:
      mov     edi, 0x30
      call    _Znwm@plt.sec
      mov     rbx, rax
      lea     rax, [rbp-0x1d0]
      mov     rsi, rax
      mov     rdi, rbx
      call    _ZN6NumberC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
      mov     [rbp-0x250], rbx
      lea     rdx, [rbp-0x250]
      lea     rax, [rbp-0x210]
      mov     rsi, rdx
      mov     rdi, rax
      call    _ZNSt6vectorIP4NodeSaIS1_EE9push_backEOS1_
      jmp     block3
    block11:
      lea     rax, [rbp-0x210]
      mov     rdi, rax
      call    _ZNKSt6vectorIP4NodeSaIS1_EE4sizeEv
      cmp     rax, 1
      sete    al
      test    al, al
      je      block13
    block12:
      lea     rax, [rbp-0x210]
      mov     rdi, rax
      call    _ZNSt6vectorIP4NodeSaIS1_EE4backEv
      mov     rdx, [rax]
      mov     rax, [rbp-0x240]
      mov     rsi, rdx
      mov     rdi, rax
      call    _ZlsRSoRK4Node
      mov     rdx, rax
      mov     rax, [_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_]
      mov     rsi, rax
      mov     rdi, rdx
      call    _ZNSolsEPFRSoS_E@plt.sec
      jmp     block14
    block13:
      mov     edi, 0x10
      call    __cxa_allocate_exception@plt.sec
      mov     rbx, rax
      lea     rsi, [mem3]; "Too many operands."
      mov     rdi, rbx
      call    _ZNSt14overflow_errorC1EPKc@plt.sec
      mov     rax, [_ZNSt14overflow_errorD1Ev]
      mov     rdx, rax
      lea     rsi, [_ZTISt14overflow_error]
      mov     rdi, rbx
      call    __cxa_throw@plt.sec
    block14:
      lea     rax, [rbp-0x1d0]
      mov     rdi, rax
      call    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt.sec
    block15:
      lea     rax, [rbp-0x210]
      mov     [rbp-0x220], rax
      mov     rax, [rbp-0x220]
      mov     rdi, rax
      call    _ZNSt6vectorIP4NodeSaIS1_EE5beginEv
      mov     [rbp-0x258], rax
      mov     rax, [rbp-0x220]
      mov     rdi, rax
      call    _ZNSt6vectorIP4NodeSaIS1_EE3endEv
      mov     [rbp-0x250], rax
    block16:
      lea     rdx, [rbp-0x250]
      lea     rax, [rbp-0x258]
      mov     rsi, rdx
      mov     rdi, rax
      call    _ZN9__gnu_cxxneIPP4NodeSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_
      test    al, al
      je      block20
    block17:
      lea     rax, [rbp-0x258]
      mov     rdi, rax
      call    _ZNK9__gnu_cxx17__normal_iteratorIPP4NodeSt6vectorIS2_SaIS2_EEEdeEv
      mov     rax, [rax]
      mov     [rbp-0x218], rax
      mov     rax, [rbp-0x218]
      test    rax, rax
      je      block19
    block18:
      mov     rdx, [rax]
      add     rdx, 8
      mov     rdx, [rdx]
      mov     rdi, rax
      call    rdx
    block19:
      lea     rax, [rbp-0x258]
      mov     rdi, rax
      call    _ZN9__gnu_cxx17__normal_iteratorIPP4NodeSt6vectorIS2_SaIS2_EEEppEv
      jmp     block16
    block20:
      lea     rax, [rbp-0x210]
      mov     rdi, rax
      call    _ZNSt6vectorIP4NodeSaIS1_EED2Ev
      lea     rax, [rbp-0x1b0]
      mov     rdi, rax
      call    _ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev@plt.sec
      jmp     block1
    block21:
      mov     rax, [rbp-0x240]
      mov     rdi, rax
      call    _ZNSo5flushEv@plt.sec
      lea     rax, [rbp-0x1f0]
      mov     rdi, rax
      call    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt.sec
      mov     eax, 0
      mov     rcx, [rbp-0x28]
      xor     rcx, fs:[0x28]
      je      block37
    block22:
      jmp     block36
    block23:
      endbr64
      mov     r12, rax
      mov     r13, rdx
      mov     rdi, rbx
      call    __cxa_free_exception@plt.sec
      mov     rbx, r13
      jmp     block29
    block24:
      endbr64
      mov     r12, rax
      mov     r13, rdx
      mov     esi, 0x40
      mov     rdi, rbx
      call    _ZdlPvm@plt.sec
      mov     rbx, r13
      jmp     block29
    block25:
      endbr64
      mov     r12, rax
      mov     r13, rdx
      mov     rdi, rbx
      call    __cxa_free_exception@plt.sec
      mov     rbx, r13
      jmp     block29
    block26:
      endbr64
      mov     r12, rax
      mov     r13, rdx
      mov     esi, 0x30
      mov     rdi, rbx
      call    _ZdlPvm@plt.sec
      mov     rbx, r13
      jmp     block29
    block27:
      endbr64
      mov     r12, rax
      mov     r13, rdx
      mov     rdi, rbx
      call    __cxa_free_exception@plt.sec
      mov     rbx, r13
      jmp     block29
    block28:
      endbr64
      mov     r12, rax
      mov     rbx, rdx
    block29:
      lea     rax, [rbp-0x1d0]
      mov     rdi, rax
      call    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt.sec
      mov     rax, r12
      mov     rdx, rbx
      cmp     rdx, 1
      je      block31
    block30:
      mov     rbx, rax
      jmp     block33
    block31:
      mov     rdi, rax
      call    __cxa_begin_catch@plt.sec
      mov     [rbp-0x228], rax
      mov     rax, [rbp-0x240]
      lea     rsi, [mem4]; "INVALID: "
      mov     rdi, rax
      call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt.sec
      mov     rbx, rax
      mov     rax, [rbp-0x228]
      mov     rax, [rax]
      add     rax, 0x10
      mov     rdx, [rax]
      mov     rax, [rbp-0x228]
      mov     rdi, rax
      call    rdx
      mov     rsi, rax
      mov     rdi, rbx
      call    _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt.sec
      mov     rdx, rax
      mov     rax, [_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_]
      mov     rsi, rax
      mov     rdi, rdx
      call    _ZNSolsEPFRSoS_E@plt.sec
      call    __cxa_end_catch@plt.sec
      jmp     block15
    block32:
      endbr64
      mov     rbx, rax
      call    __cxa_end_catch@plt.sec
    block33:
      lea     rax, [rbp-0x210]
      mov     rdi, rax
      call    _ZNSt6vectorIP4NodeSaIS1_EED2Ev
      lea     rax, [rbp-0x1b0]
      mov     rdi, rax
      call    _ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev@plt.sec
      jmp     block35
    block34:
      endbr64
      mov     rbx, rax
    block35:
      lea     rax, [rbp-0x1f0]
      mov     rdi, rax
      call    _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev@plt.sec
      mov     rax, rbx
      mov     rdi, rax
      call    _Unwind_Resume@plt.sec
    block36:
      call    __stack_chk_fail@plt.sec
    block37:
      add     rsp, 0x258
      pop     rbx
      pop     r12
      pop     r13
      pop     rbp
      ret
