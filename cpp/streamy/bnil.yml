"_Z11get_istreamiPPc":
  "hlil": |-
    void* fsbase
    int64_t rax = *(fsbase + 0x28)
    char rbx = 0
    char r12 = 0
    char rax_5
    char r13
    if (arg1 s> 1)
        std::allocator<char>::allocator()
        rbx = 1
        void var_58
        std::__cxx11::basic_stri... std::allocator<char> >::basic_string(&var_58, 0x800c)
        r12 = 1
        rax_5 = std::operator==<char, st..._traits<char>, std::allocator<char> >(*(arg2 + 8), &var_58)
        if (rax_5 == 0)
            r13 = 0
    if (arg1 s<= 1 || (arg1 s> 1 && rax_5 != 0))
        r13 = 1
    if (r12 != 0)
        std::__cxx11::basic_stri...std::allocator<char> >::~basic_string()
    if (rbx != 0)
        std::allocator<char>::~allocator()
    void* rax_6
    if (r13 == 0)
        void* rax_7 = operator new(0x208)
        std::basic_ifstream<char...::char_traits<char> >::basic_ifstream(rax_7, *(arg2 + 8))
        rax_6 = rax_7
    else
        rax_6 = std::cin
    if ((rax ^ *(fsbase + 0x28)) == 0)
        return rax_6
    __stack_chk_fail()
    noreturn
  "llil": |-
    block1:
      push(rbp)
      rbp = rsp {__saved_rbp}
      push(r13)
      push(r12)
      push(rbx)
      rsp = rsp - 0x58
      [rbp - 0x64 {var_6c}].d = edi
      [rbp - 0x70 {var_78}].q = rsi
      rax = [fsbase + 0x28].q
      [rbp - 0x28 {var_30}].q = rax
      eax = 0
      ebx = 0
      r12d = 0
      if ([rbp - 0x64].d s<= 1) block2 else block3
    block2:
      r13d = 1
      goto block4
    block3:
      rax = rbp - 0x51 {var_59}
      rdi = rax {var_59}
      call(_ZNSaIcEC1Ev)
      ebx = 1
      rdx = rbp - 0x51 {var_59}
      rax = rbp - 0x50 {var_58}
      rsi = 0x800c
      rdi = rax {var_58}
      call(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_)
      r12d = 1
      rax = [rbp - 0x70 {var_78}].q
      rax = rax + 8
      rax = [rax].q
      rdx = rbp - 0x50 {var_58}
      rsi = rdx {var_58}
      rdi = rax
      call(_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE)
      if (al == 0) block5 else block2
    block4:
      if (r12b == 0) block6 else block7
    block5:
      r13d = 0
      goto block4
    block6:
      if (bl == 0) block8 else block9
    block7:
      rax = rbp - 0x50 {var_58}
      rdi = rax {var_58}
      call(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev)
      goto block6
    block8:
      if (r13b == 0) block10 else block11
    block9:
      rax = rbp - 0x51 {var_59}
      rdi = rax {var_59}
      call(_ZNSaIcED1Ev)
      goto block8
    block10:
      edi = 0x208
      call(_Znwm)
      rbx = rax
      rax = [rbp - 0x70 {var_78}].q
      rax = rax + 8
      rax = [rax].q
      edx = 8
      rsi = rax
      rdi = rbx
      call(_ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode)
      rax = rbx
      goto block12
    block11:
      rax = 0xc160
      goto block12
    block12:
      rcx = [rbp - 0x28 {var_30}].q
      rcx = rcx ^ [fsbase + 0x28].q
      if (rcx == 0) block13 else block14
    block13:
      rsp = rsp + 0x58
      rbx = pop
      r12 = pop
      r13 = pop
      rbp = pop
      <return> jump(pop)
    block14:
      goto block15
    block15:
      call(__stack_chk_fail)
      noreturn
  "mlil": |-
    block1:
      var_6c = arg1
      var_78 = arg2
      rax = [fsbase + 0x28].q
      var_30 = rax
      rax_1 = 0
      rbx = 0
      r12 = 0
      if (var_6c s<= 1) block2 else block3
    block2:
      r13 = 1
      goto block4
    block3:
      _ZNSaIcEC1Ev()
      rbx = 1
      rdi = &var_58
      _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(rdi, 0x800c)
      r12 = 1
      rax_2 = var_78
      rax_3 = rax_2 + 8
      rax_4 = [rax_3].q
      rsi = &var_58
      rdi_1 = rax_4
      _ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE(rdi_1, rsi)
      if (rax_5 == 0) block5 else block2
    block4:
      if (r12 == 0) block6 else block7
    block5:
      r13 = 0
      goto block4
    block6:
      if (rbx == 0) block8 else block9
    block7:
      _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev()
      goto block6
    block8:
      if (r13 == 0) block10 else block11
    block9:
      _ZNSaIcED1Ev()
      goto block8
    block10:
      _Znwm(0x208)
      rbx_1 = rax_7
      rax_8 = var_78
      rax_9 = rax_8 + 8
      rax_10 = [rax_9].q
      rdx_1 = 8
      rsi_1 = rax_10
      rdi_2 = rbx_1
      _ZNSt14basic_ifstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode(rdi_2, rsi_1)
      rax_6 = rbx_1
      goto block12
    block11:
      rax_6 = 0xc160
      goto block12
    block12:
      rcx = var_30
      rcx_1 = rcx ^ [fsbase + 0x28].q
      if (rcx_1 == 0) block13 else block14
    block13:
      return rax_6
    block14:
      goto block15
    block15:
      __stack_chk_fail()
      noreturn
"_Z11get_ostreamiPPc":
  "hlil": |-
    void* fsbase
    int64_t rax = *(fsbase + 0x28)
    char rbx = 0
    char r12 = 0
    char rax_5
    char r13
    if (arg1 s> 2)
        std::allocator<char>::allocator()
        rbx = 1
        void var_58
        std::__cxx11::basic_stri... std::allocator<char> >::basic_string(&var_58, 0x800c)
        r12 = 1
        rax_5 = std::operator==<char, st..._traits<char>, std::allocator<char> >(*(arg2 + 0x10), &var_58)
        if (rax_5 == 0)
            r13 = 0
    if (arg1 s<= 2 || (arg1 s> 2 && rax_5 != 0))
        r13 = 1
    if (r12 != 0)
        std::__cxx11::basic_stri...std::allocator<char> >::~basic_string()
    if (rbx != 0)
        std::allocator<char>::~allocator()
    void* rax_6
    if (r13 == 0)
        void* rax_7 = operator new(0x200)
        std::basic_ofstream<char...::char_traits<char> >::basic_ofstream(rax_7, *(arg2 + 0x10))
        rax_6 = rax_7
    else
        rax_6 = std::cout
    if ((rax ^ *(fsbase + 0x28)) == 0)
        return rax_6
    __stack_chk_fail()
    noreturn
  "llil": |-
    block1:
      push(rbp)
      rbp = rsp {__saved_rbp}
      push(r13)
      push(r12)
      push(rbx)
      rsp = rsp - 0x58
      [rbp - 0x64 {var_6c}].d = edi
      [rbp - 0x70 {var_78}].q = rsi
      rax = [fsbase + 0x28].q
      [rbp - 0x28 {var_30}].q = rax
      eax = 0
      ebx = 0
      r12d = 0
      if ([rbp - 0x64].d s<= 2) block2 else block3
    block2:
      r13d = 1
      goto block4
    block3:
      rax = rbp - 0x51 {var_59}
      rdi = rax {var_59}
      call(_ZNSaIcEC1Ev)
      ebx = 1
      rdx = rbp - 0x51 {var_59}
      rax = rbp - 0x50 {var_58}
      rsi = 0x800c
      rdi = rax {var_58}
      call(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_)
      r12d = 1
      rax = [rbp - 0x70 {var_78}].q
      rax = rax + 0x10
      rax = [rax].q
      rdx = rbp - 0x50 {var_58}
      rsi = rdx {var_58}
      rdi = rax
      call(_ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE)
      if (al == 0) block5 else block2
    block4:
      if (r12b == 0) block6 else block7
    block5:
      r13d = 0
      goto block4
    block6:
      if (bl == 0) block8 else block9
    block7:
      rax = rbp - 0x50 {var_58}
      rdi = rax {var_58}
      call(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev)
      goto block6
    block8:
      if (r13b == 0) block10 else block11
    block9:
      rax = rbp - 0x51 {var_59}
      rdi = rax {var_59}
      call(_ZNSaIcED1Ev)
      goto block8
    block10:
      edi = 0x200
      call(_Znwm)
      rbx = rax
      rax = [rbp - 0x70 {var_78}].q
      rax = rax + 0x10
      rax = [rax].q
      edx = 0x10
      rsi = rax
      rdi = rbx
      call(_ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode)
      rax = rbx
      goto block12
    block11:
      rax = 0xc040
      goto block12
    block12:
      rcx = [rbp - 0x28 {var_30}].q
      rcx = rcx ^ [fsbase + 0x28].q
      if (rcx == 0) block13 else block14
    block13:
      rsp = rsp + 0x58
      rbx = pop
      r12 = pop
      r13 = pop
      rbp = pop
      <return> jump(pop)
    block14:
      goto block15
    block15:
      call(__stack_chk_fail)
      noreturn
  "mlil": |-
    block1:
      var_6c = arg1
      var_78 = arg2
      rax = [fsbase + 0x28].q
      var_30 = rax
      rax_1 = 0
      rbx = 0
      r12 = 0
      if (var_6c s<= 2) block2 else block3
    block2:
      r13 = 1
      goto block4
    block3:
      _ZNSaIcEC1Ev()
      rbx = 1
      rdi = &var_58
      _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(rdi, 0x800c)
      r12 = 1
      rax_2 = var_78
      rax_3 = rax_2 + 0x10
      rax_4 = [rax_3].q
      rsi = &var_58
      rdi_1 = rax_4
      _ZSteqIcSt11char_traitsIcESaIcEEbPKT_RKNSt7__cxx1112basic_stringIS3_T0_T1_EE(rdi_1, rsi)
      if (rax_5 == 0) block5 else block2
    block4:
      if (r12 == 0) block6 else block7
    block5:
      r13 = 0
      goto block4
    block6:
      if (rbx == 0) block8 else block9
    block7:
      _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev()
      goto block6
    block8:
      if (r13 == 0) block10 else block11
    block9:
      _ZNSaIcED1Ev()
      goto block8
    block10:
      _Znwm(0x200)
      rbx_1 = rax_7
      rax_8 = var_78
      rax_9 = rax_8 + 0x10
      rax_10 = [rax_9].q
      rdx_1 = 0x10
      rsi_1 = rax_10
      rdi_2 = rbx_1
      _ZNSt14basic_ofstreamIcSt11char_traitsIcEEC1EPKcSt13_Ios_Openmode(rdi_2, rsi_1)
      rax_6 = rbx_1
      goto block12
    block11:
      rax_6 = 0xc040
      goto block12
    block12:
      rcx = var_30
      rcx_1 = rcx ^ [fsbase + 0x28].q
      if (rcx_1 == 0) block13 else block14
    block13:
      return rax_6
    block14:
      goto block15
    block15:
      __stack_chk_fail()
      noreturn
"main":
  "hlil": |-
    void* fsbase
    int64_t rax = *(fsbase + 0x28)
    int64_t rax_2 = get_istream(arg1, arg2)
    int64_t rax_4 = get_ostream(arg1, arg2)
    std::__cxx11::basic_stri... std::allocator<char> >::basic_string()
    while (true)
        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > var_1f8
        *(*std::getline<char, std::..._traits<char>, std::allocator<char> >(rax_2, &var_1f8) - 0x18)
        if (std::basic_ios<char, std::char_traits<char> >::operator bool() == 0)
            break
        std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > var_1b8
        std::__cxx11::basic_istr...llocator<char> >::basic_istringstream(&var_1b8, &var_1f8)
        std::vector<Node*, std::allocator<Node*> >::vector()
        std::__cxx11::basic_stri... std::allocator<char> >::basic_string()
        char* var_260
        int64_t var_258
        void var_218
        int64_t rax_25
        while (true)
            void var_1d8
            *(*std::operator>><char, st..._traits<char>, std::allocator<char> >(&var_1b8, &var_1d8) - 0x18)
            if (std::basic_ios<char, std::char_traits<char> >::operator bool() == 0)
                rax_25.b = std::vector<Node*, std::allocator<Node*> >::size(&var_218) == 1
                break
            int64_t rax_12
            rax_12.b = std::map<std::__cxx11::b...or<char> > const, int32_t> > >::count(PRECEDENCE) != 0
            if (rax_12.b == 0)
                var_260 = nullptr
                strtol(std::__cxx11::basic_stri...<char>, std::allocator<char> >::c_str(), &var_260, 0)
                if (*var_260 != 0)
                    void* rax_23 = __cxa_allocate_exception(0x10)
                    std::runtime_error::runtime_error(rax_23)
                    __cxa_throw(rax_23, _typeinfo_for_std::runtime_error, std::runtime_error::~runtime_error)
                    noreturn
                int64_t rax_24 = operator new(0x30)
                Number::Number(rax_24)
                var_258 = rax_24
                std::vector<Node*, std::allocator<Node*> >::push_back(&var_218)
            else
                int64_t rax_13
                rax_13.b = std::vector<Node*, std::allocator<Node*> >::size(&var_218) u<= 1
                if (rax_13.b != 0)
                    void* rax_14 = __cxa_allocate_exception(0x10)
                    std::underflow_error::underflow_error(rax_14)
                    __cxa_throw(rax_14, _typeinfo_for_std::underflow_error, std::underflow_error::~underflow_error)
                    noreturn
                *std::vector<Node*, std::allocator<Node*> >::back()
                std::vector<Node*, std::allocator<Node*> >::pop_back()
                void* rax_18 = *std::vector<Node*, std::allocator<Node*> >::back()
                std::vector<Node*, std::allocator<Node*> >::pop_back()
                int64_t rax_19 = operator new(0x40)
                Operator::Operator(rax_19, &var_1d8, rax_18)
                var_258 = rax_19
                std::vector<Node*, std::allocator<Node*> >::push_back(&var_218)
        if (rax_25.b == 0)
            void* rax_29 = __cxa_allocate_exception(0x10)
            std::overflow_error::overflow_error(rax_29)
            __cxa_throw(rax_29, _typeinfo_for_std::overflow_error, std::overflow_error::~overflow_error)
            noreturn
        std::ostream::operator<<(operator<<(rax_4, *std::vector<Node*, std::allocator<Node*> >::back()))
        std::__cxx11::basic_stri...std::allocator<char> >::~basic_string()
        int64_t* var_228_1 = &var_218
        var_260 = std::vector<Node*, std::allocator<Node*> >::begin(var_228_1)
        var_258 = std::vector<Node*, std::allocator<Node*> >::end(var_228_1)
        while (true)
            int64_t* rsi_12 = &var_258
            if (__gnu_cxx::operator!=<No...ctor<Node*, std::allocator<Node*> > >(&var_260, rsi_12) == 0)
                break
            int64_t* rax_36 = *__gnu_cxx::__normal_iter... std::allocator<Node*> > >::operator*(&var_260)
            if (rax_36 != 0)
                int64_t rdx_17 = *(*rax_36 + 8)
                rdx_17(rax_36, rsi_12, rdx_17)
            __gnu_cxx::__normal_iter...std::allocator<Node*> > >::operator++(&var_260)
        std::vector<Node*, std::allocator<Node*> >::~vector()
        std::__cxx11::basic_istr...locator<char> >::~basic_istringstream()
    std::ostream::flush()
    std::__cxx11::basic_stri...std::allocator<char> >::~basic_string()
    if ((rax ^ *(fsbase + 0x28)) == 0)
        return 0
    __stack_chk_fail()
    noreturn
  "llil": |-
    block1:
      push(rbp)
      rbp = rsp {__saved_rbp}
      push(r13)
      push(r12)
      push(rbx)
      rsp = rsp - 0x258
      [rbp - 0x264 {var_26c}].d = edi
      [rbp - 0x270 {var_278}].q = rsi
      rax = [fsbase + 0x28].q
      [rbp - 0x28 {var_30}].q = rax
      eax = 0
      rdx = [rbp - 0x270 {var_278}].q
      eax = [rbp - 0x264 {var_26c}].d
      rsi = rdx
      edi = eax
      call(_Z11get_istreamiPPc)
      [rbp - 0x248 {var_250}].q = rax
      rdx = [rbp - 0x270 {var_278}].q
      eax = [rbp - 0x264 {var_26c}].d
      rsi = rdx
      edi = eax
      call(_Z11get_ostreamiPPc)
      [rbp - 0x240 {var_248}].q = rax
      rax = rbp - 0x1f0 {var_1f8}
      rdi = rax {var_1f8}
      call(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev)
      goto block2
    block2:
      rdx = rbp - 0x1f0 {var_1f8}
      rax = [rbp - 0x248 {var_250}].q
      rsi = rdx {var_1f8}
      rdi = rax
      call(_ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE)
      rdx = [rax].q
      rdx = rdx - 0x18
      rdx = [rdx].q
      rax = rax + rdx
      rdi = rax
      call(_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv)
      if (al == 0) block3 else block4
    block3:
      rax = [rbp - 0x240 {var_248}].q
      rdi = rax
      call(_ZNSo5flushEv)
      rax = rbp - 0x1f0 {var_1f8}
      rdi = rax {var_1f8}
      call(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev)
      eax = 0
      rcx = [rbp - 0x28 {var_30}].q
      rcx = rcx ^ [fsbase + 0x28].q
      if (rcx == 0) block5 else block6
    block4:
      rcx = rbp - 0x1f0 {var_1f8}
      rax = rbp - 0x1b0 {var_1b8}
      edx = 8
      rsi = rcx {var_1f8}
      rdi = rax {var_1b8}
      call(_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode)
      rax = rbp - 0x210 {var_218}
      rdi = rax {var_218}
      call(_ZNSt6vectorIP4NodeSaIS1_EEC2Ev)
      rax = rbp - 0x1d0 {var_1d8}
      rdi = rax {var_1d8}
      call(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev)
      goto block7
    block5:
      rsp = rsp + 0x258
      rbx = pop
      r12 = pop
      r13 = pop
      rbp = pop
      <return> jump(pop)
    block6:
      goto block8
    block7:
      rdx = rbp - 0x1d0 {var_1d8}
      rax = rbp - 0x1b0 {var_1b8}
      rsi = rdx {var_1d8}
      rdi = rax {var_1b8}
      call(_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE)
      rdx = [rax].q
      rdx = rdx - 0x18
      rdx = [rdx].q
      rax = rax + rdx
      rdi = rax
      call(_ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv)
      if (al == 0) block9 else block10
    block8:
      call(__stack_chk_fail)
      noreturn
    block9:
      rax = rbp - 0x210 {var_218}
      rdi = rax {var_218}
      call(_ZNKSt6vectorIP4NodeSaIS1_EE4sizeEv)
      al = rax == 1
      if (al == 0) block11 else block12
    block10:
      rax = rbp - 0x1d0 {var_1d8}
      rsi = rax {var_1d8}
      rdi = 0xc280
      call(_ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEE5countERS9_)
      al = rax != 0
      if (al == 0) block13 else block14
    block11:
      edi = 0x10
      call(__cxa_allocate_exception)
      rbx = rax
      rsi = 0x8032
      rdi = rbx
      call(_ZNSt14overflow_errorC1EPKc)
      rax = [0xbfa8].q
      rdx = rax
      rsi = 0xbb40
      rdi = rbx
      call(__cxa_throw)
      noreturn
    block12:
      rax = rbp - 0x210 {var_218}
      rdi = rax {var_218}
      call(_ZNSt6vectorIP4NodeSaIS1_EE4backEv)
      rdx = [rax].q
      rax = [rbp - 0x240 {var_248}].q
      rsi = rdx
      rdi = rax
      call(_ZlsRSoRK4Node)
      rdx = rax
      rax = [0xbfa0].q
      rsi = rax
      rdi = rdx
      call(_ZNSolsEPFRSoS_E)
      goto block15
    block13:
      [rbp - 0x258 {var_260}].q = 0
      rax = rbp - 0x1d0 {var_1d8}
      rdi = rax {var_1d8}
      call(_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv)
      rcx = rax
      rax = rbp - 0x258 {var_260}
      edx = 0
      rsi = rax {var_260}
      rdi = rcx
      call(strtol)
      rax = [rbp - 0x258 {var_260}].q
      eax = zx.d([rax].b)
      if (al == 0) block16 else block17
    block14:
      rax = rbp - 0x210 {var_218}
      rdi = rax {var_218}
      call(_ZNKSt6vectorIP4NodeSaIS1_EE4sizeEv)
      al = rax u<= 1
      if (al == 0) block18 else block19
    block15:
      rax = rbp - 0x1d0 {var_1d8}
      rdi = rax {var_1d8}
      call(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev)
      rax = rbp - 0x210 {var_218}
      [rbp - 0x220 {var_228_1}].q = rax {var_218}
      rax = [rbp - 0x220 {var_228_1}].q {var_218}
      rdi = rax {var_218}
      call(_ZNSt6vectorIP4NodeSaIS1_EE5beginEv)
      [rbp - 0x258 {var_260}].q = rax
      rax = [rbp - 0x220 {var_228_1}].q {var_218}
      rdi = rax {var_218}
      call(_ZNSt6vectorIP4NodeSaIS1_EE3endEv)
      [rbp - 0x250 {var_258}].q = rax
      goto block20
    block16:
      edi = 0x30
      call(_Znwm)
      rbx = rax
      rax = rbp - 0x1d0 {var_1d8}
      rsi = rax {var_1d8}
      rdi = rbx
      call(_ZN6NumberC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
      [rbp - 0x250 {var_258}].q = rbx
      rdx = rbp - 0x250 {var_258}
      rax = rbp - 0x210 {var_218}
      rsi = rdx {var_258}
      rdi = rax {var_218}
      call(_ZNSt6vectorIP4NodeSaIS1_EE9push_backEOS1_)
      goto block7
    block17:
      edi = 0x10
      call(__cxa_allocate_exception)
      rbx = rax
      rsi = 0x8023
      rdi = rbx
      call(_ZNSt13runtime_errorC1EPKc)
      rax = [0xbfb0].q
      rdx = rax
      rsi = 0xbb80
      rdi = rbx
      call(__cxa_throw)
      noreturn
    block18:
      rax = rbp - 0x210 {var_218}
      rdi = rax {var_218}
      call(_ZNSt6vectorIP4NodeSaIS1_EE4backEv)
      rax = [rax].q
      [rbp - 0x238 {var_240_1}].q = rax
      rax = rbp - 0x210 {var_218}
      rdi = rax {var_218}
      call(_ZNSt6vectorIP4NodeSaIS1_EE8pop_backEv)
      rax = rbp - 0x210 {var_218}
      rdi = rax {var_218}
      call(_ZNSt6vectorIP4NodeSaIS1_EE4backEv)
      rax = [rax].q
      [rbp - 0x230 {var_238_1}].q = rax
      rax = rbp - 0x210 {var_218}
      rdi = rax {var_218}
      call(_ZNSt6vectorIP4NodeSaIS1_EE8pop_backEv)
      edi = 0x40
      call(_Znwm)
      rbx = rax
      rcx = [rbp - 0x238 {var_240_1}].q
      rdx = [rbp - 0x230 {var_238_1}].q
      rax = rbp - 0x1d0 {var_1d8}
      rsi = rax {var_1d8}
      rdi = rbx
      call(_ZN8OperatorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP4NodeS9_)
      [rbp - 0x250 {var_258}].q = rbx
      rdx = rbp - 0x250 {var_258}
      rax = rbp - 0x210 {var_218}
      rsi = rdx {var_258}
      rdi = rax {var_218}
      call(_ZNSt6vectorIP4NodeSaIS1_EE9push_backEOS1_)
      goto block7
    block19:
      edi = 0x10
      call(__cxa_allocate_exception)
      rbx = rax
      rsi = 0x800e
      rdi = rbx
      call(_ZNSt15underflow_errorC1EPKc)
      rax = [0xbfd8].q
      rdx = rax
      rsi = 0xbb58
      rdi = rbx
      call(__cxa_throw)
      noreturn
    block20:
      rdx = rbp - 0x250 {var_258}
      rax = rbp - 0x258 {var_260}
      rsi = rdx {var_258}
      rdi = rax {var_260}
      call(_ZN9__gnu_cxxneIPP4NodeSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_)
      if (al == 0) block21 else block22
    block21:
      rax = rbp - 0x210 {var_218}
      rdi = rax {var_218}
      call(_ZNSt6vectorIP4NodeSaIS1_EED2Ev)
      rax = rbp - 0x1b0 {var_1b8}
      rdi = rax {var_1b8}
      call(_ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev)
      goto block2
    block22:
      rax = rbp - 0x258 {var_260}
      rdi = rax {var_260}
      call(_ZNK9__gnu_cxx17__normal_iteratorIPP4NodeSt6vectorIS2_SaIS2_EEEdeEv)
      rax = [rax].q
      [rbp - 0x218 {var_220_1}].q = rax
      rax = [rbp - 0x218 {var_220_1}].q
      if (rax == 0) block23 else block24
    block23:
      rax = rbp - 0x258 {var_260}
      rdi = rax {var_260}
      call(_ZN9__gnu_cxx17__normal_iteratorIPP4NodeSt6vectorIS2_SaIS2_EEEppEv)
      goto block20
    block24:
      rdx = [rax].q
      rdx = rdx + 8
      rdx = [rdx].q
      rdi = rax
      call(rdx)
      goto block23
  "mlil": |-
    block1:
      var_26c = arg1
      var_278 = arg2
      rax = [fsbase + 0x28].q
      var_30 = rax
      rdx = var_278
      rax_1 = var_26c
      rsi = rdx
      rdi = rax_1
      _Z11get_istreamiPPc(rdi, rsi)
      var_250 = rax_2
      rdx_1 = var_278
      rax_3 = var_26c
      rsi_1 = rdx_1
      rdi_1 = rax_3
      _Z11get_ostreamiPPc(rdi_1, rsi_1)
      var_248 = rax_4
      _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev()
      goto block2
    block2:
      rax_5 = var_250
      rsi_2 = &var_1f8
      rdi_2 = rax_5
      _ZSt7getlineIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(rdi_2, rsi_2)
      rdx_2 = [rax_6].q
      rdx_3 = rdx_2 - 0x18
      rdx_4 = [rdx_3].q
      rax_7 = rax_6 + rdx_4
      rdi_3 = rax_7
      _ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv()
      if (rax_8 == 0) block3 else block4
    block3:
      rax_38 = var_248
      rdi_28 = rax_38
      _ZNSo5flushEv()
      _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev()
      rax_39 = 0
      rcx_3 = var_30
      rcx_4 = rcx_3 ^ [fsbase + 0x28].q
      if (rcx_4 == 0) block5 else block6
    block4:
      rdx_5 = 8
      rsi_3 = &var_1f8
      rdi_4 = &var_1b8
      _ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEEC1ERKNS_12basic_stringIcS2_S3_EESt13_Ios_Openmode(rdi_4, rsi_3)
      _ZNSt6vectorIP4NodeSaIS1_EEC2Ev()
      _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev()
      goto block7
    block5:
      return 0
    block6:
      goto block8
    block7:
      rsi_4 = &var_1d8
      rdi_5 = &var_1b8
      _ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(rdi_5, rsi_4)
      rdx_6 = [rax_9].q
      rdx_7 = rdx_6 - 0x18
      rdx_8 = [rdx_7].q
      rax_10 = rax_9 + rdx_8
      rdi_6 = rax_10
      _ZNKSt9basic_iosIcSt11char_traitsIcEEcvbEv()
      if (rax_11 == 0) block9 else block10
    block8:
      __stack_chk_fail()
      noreturn
    block9:
      rdi_17 = &var_218
      _ZNKSt6vectorIP4NodeSaIS1_EE4sizeEv(rdi_17)
      rax_25.al = rax_25 == 1
      if (rax_25.al == 0) block11 else block12
    block10:
      _ZNKSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEiSt4lessIS5_ESaISt4pairIKS5_iEEE5countERS9_(0xc280)
      rax_12.al = rax_12 != 0
      if (rax_12.al == 0) block13 else block14
    block11:
      __cxa_allocate_exception(0x10)
      rbx_5 = rax_29
      rsi_11 = 0x8032
      rdi_20 = rbx_5
      _ZNSt14overflow_errorC1EPKc(rdi_20)
      rdx_14 = std::overflow_error::~overflow_error
      rdi_21 = rbx_5
      __cxa_throw(rdi_21, 0xbb40, rdx_14)
      noreturn
    block12:
      _ZNSt6vectorIP4NodeSaIS1_EE4backEv()
      rdx_12 = [rax_26].q
      rax_27 = var_248
      rsi_9 = rdx_12
      rdi_18 = rax_27
      _ZlsRSoRK4Node(rdi_18, rsi_9)
      rdx_13 = rax_28
      rsi_10 = std::endl<char, std::char_traits<char> >
      rdi_19 = rdx_13
      _ZNSolsEPFRSoS_E(rdi_19)
      goto block15
    block13:
      var_260 = nullptr
      _ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv()
      rcx_2 = rax_20
      rsi_7 = &var_260
      rdi_12 = rcx_2
      strtol(rdi_12, rsi_7, 0)
      rax_21 = var_260
      rax_22 = [rax_21].b
      if (rax_22 == 0) block16 else block17
    block14:
      rdi_7 = &var_218
      _ZNKSt6vectorIP4NodeSaIS1_EE4sizeEv(rdi_7)
      rax_13.al = rax_13 u<= 1
      if (rax_13.al == 0) block18 else block19
    block15:
      _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev()
      var_228_1 = &var_218
      rax_30 = var_228_1
      rdi_22 = rax_30
      _ZNSt6vectorIP4NodeSaIS1_EE5beginEv(rdi_22)
      var_260 = rax_31
      rax_32 = var_228_1
      rdi_23 = rax_32
      _ZNSt6vectorIP4NodeSaIS1_EE3endEv(rdi_23)
      var_258 = rax_33
      goto block20
    block16:
      _Znwm(0x30)
      rbx_4 = rax_24
      rdi_15 = rbx_4
      _ZN6NumberC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(rdi_15)
      var_258 = rbx_4
      rdi_16 = &var_218
      _ZNSt6vectorIP4NodeSaIS1_EE9push_backEOS1_(rdi_16)
      goto block7
    block17:
      __cxa_allocate_exception(0x10)
      rbx_3 = rax_23
      rsi_8 = 0x8023
      rdi_13 = rbx_3
      _ZNSt13runtime_errorC1EPKc(rdi_13)
      rdx_11 = std::runtime_error::~runtime_error
      rdi_14 = rbx_3
      __cxa_throw(rdi_14, 0xbb80, rdx_11)
      noreturn
    block18:
      _ZNSt6vectorIP4NodeSaIS1_EE4backEv()
      rax_16 = [rax_15].q
      var_240_1 = rax_16
      _ZNSt6vectorIP4NodeSaIS1_EE8pop_backEv()
      _ZNSt6vectorIP4NodeSaIS1_EE4backEv()
      rax_18 = [rax_17].q
      var_238_1 = rax_18
      _ZNSt6vectorIP4NodeSaIS1_EE8pop_backEv()
      _Znwm(0x40)
      rbx_2 = rax_19
      rcx_1 = var_240_1
      rdx_10 = var_238_1
      rsi_6 = &var_1d8
      rdi_10 = rbx_2
      _ZN8OperatorC1ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP4NodeS9_(rdi_10, rsi_6, rdx_10)
      var_258 = rbx_2
      rdi_11 = &var_218
      _ZNSt6vectorIP4NodeSaIS1_EE9push_backEOS1_(rdi_11)
      goto block7
    block19:
      __cxa_allocate_exception(0x10)
      rbx_1 = rax_14
      rsi_5 = 0x800e
      rdi_8 = rbx_1
      _ZNSt15underflow_errorC1EPKc(rdi_8)
      rdx_9 = std::underflow_error::~underflow_error
      rdi_9 = rbx_1
      __cxa_throw(rdi_9, 0xbb58, rdx_9)
      noreturn
    block20:
      rsi_12 = &var_258
      rdi_24 = &var_260
      _ZN9__gnu_cxxneIPP4NodeSt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(rdi_24, rsi_12)
      if (rax_34 == 0) block21 else block22
    block21:
      _ZNSt6vectorIP4NodeSaIS1_EED2Ev()
      _ZNSt7__cxx1119basic_istringstreamIcSt11char_traitsIcESaIcEED1Ev()
      goto block2
    block22:
      rdi_25 = &var_260
      _ZNK9__gnu_cxx17__normal_iteratorIPP4NodeSt6vectorIS2_SaIS2_EEEdeEv(rdi_25)
      rax_36 = [rax_35].q
      var_220_1 = rax_36
      rax_37 = var_220_1
      if (rax_37 == 0) block23 else block24
    block23:
      rdi_27 = &var_260
      _ZN9__gnu_cxx17__normal_iteratorIPP4NodeSt6vectorIS2_SaIS2_EEEppEv(rdi_27)
      goto block20
    block24:
      rdx_15 = [rax_37].q
      rdx_16 = rdx_15 + 8
      rdx_17 = [rdx_16].q
      rdi_26 = rax_37
      rdx_17(rdi_26, rsi_12, rdx_17)
      goto block23
