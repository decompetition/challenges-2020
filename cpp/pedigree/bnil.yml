"_ZN6Person4findERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE":
  "hlil": |-
    void* fsbase
    int64_t rax = *(fsbase + 0x28)
    int64_t var_20 = std::map<std::__cxx11::b...tor<char> > const, Person*> > >::find(Person::ALL)
    int64_t var_18 = std::map<std::__cxx11::b...ator<char> > const, Person*> > >::end()
    if (std::operator==(&var_20, &var_18) != 0)
        std::operator<<<std::char_traits<char> >(std::operator<<<char, st..._traits<char>, std::allocator<char> >(std::operator<<<std::char_traits<char> >(std::cerr, "Unknown person: "), arg1), 0xa)
        exit(2)
        noreturn
    int64_t rax_9 = *(std::_Rb_tree_iterator<s...char> > const, Person*> >::operator->() + 0x20)
    if ((rax ^ *(fsbase + 0x28)) == 0)
        return rax_9
    __stack_chk_fail()
    noreturn
  "llil": |-
    block1:
      push(rbp)
      rbp = rsp {__saved_rbp}
      rsp = rsp - 0x30
      [rbp - 0x28 {var_30}].q = rdi
      rax = [fsbase + 0x28].q
      [rbp - 8 {var_10}].q = rax
      eax = 0
      rax = [rbp - 0x28 {var_30}].q
      rsi = rax
      rdi = 0xc3a0
      call(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP6PersonSt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_)
      [rbp - 0x18 {var_20}].q = rax
      rdi = 0xc3a0
      call(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP6PersonSt4lessIS5_ESaISt4pairIKS5_S7_EEE3endEv)
      [rbp - 0x10 {var_18}].q = rax
      rdx = rbp - 0x10 {var_18}
      rax = rbp - 0x18 {var_20}
      rsi = rdx {var_18}
      rdi = rax {var_20}
      call(_ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP6PersonEESD_)
      if (al == 0) block2 else block3
    block2:
      rax = rbp - 0x18 {var_20}
      rdi = rax {var_20}
      call(_ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP6PersonEEptEv)
      rax = [rax + 0x20].q
      rcx = [rbp - 8 {var_10}].q
      rcx = rcx ^ [fsbase + 0x28].q
      if (rcx == 0) block4 else block5
    block3:
      rsi = 0x8008
      rdi = 0xc280
      call(_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc)
      rdx = rax
      rax = [rbp - 0x28 {var_30}].q
      rsi = rax
      rdi = rdx
      call(_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE)
      esi = 0xa
      rdi = rax
      call(_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c)
      edi = 2
      call(exit)
      noreturn
    block4:
      rsp = rbp
      rbp = pop
      <return> jump(pop)
    block5:
      call(__stack_chk_fail)
      noreturn
  "mlil": |-
    block1:
      var_30 = arg1
      rax = [fsbase + 0x28].q
      var_10 = rax
      rax_1 = var_30
      rsi = rax_1
      _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP6PersonSt4lessIS5_ESaISt4pairIKS5_S7_EEE4findERSB_(0xc3a0)
      var_20 = rax_2
      rdi = 0xc3a0
      _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP6PersonSt4lessIS5_ESaISt4pairIKS5_S7_EEE3endEv()
      var_18 = rax_3
      rsi_1 = &var_18
      rdi_1 = &var_20
      _ZSteqRKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP6PersonEESD_(rdi_1, rsi_1)
      if (rax_4 == 0) block2 else block3
    block2:
      _ZNKSt17_Rb_tree_iteratorISt4pairIKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP6PersonEEptEv()
      rax_9 = [rax_8 + 0x20].q
      rcx = var_10
      rcx_1 = rcx ^ [fsbase + 0x28].q
      if (rcx_1 == 0) block4 else block5
    block3:
      _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(0xc280, "Unknown person: ")
      rdx = rax_5
      rax_6 = var_30
      rsi_2 = rax_6
      rdi_2 = rdx
      _ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(rdi_2, rsi_2)
      rdi_3 = rax_7
      _ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c(rdi_3, 0xa)
      exit(2)
      noreturn
    block4:
      return rax_9
    block5:
      __stack_chk_fail()
      noreturn
"_ZN6PersonC2ERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_":
  "hlil": "void* fsbase\nint64_t rax = *(fsbase + 0x28)\nstd::__cxx11::basic_stri...\
    \ std::allocator<char> >::basic_string()\nstd::set<Person*, std::l...son*>, std::allocator<Person*>\
    \ >::set()\nstd::__cxx11::basic_stri...r>, std::allocator<char> >::operator=(arg1)\n\
    *(arg1 + 0x20) = Person::find(arg3)\nstd::_Rb_tree_node_base* rcx\n*(arg1 + 0x28)\
    \ = Person::find(rcx)\nif (*(arg1 + 0x20) != 0)\n    std::set<Person*, std::l...*>,\
    \ std::allocator<Person*> >::insert(*(arg1 + 0x20) + 0x30)\nif (*(arg1 + 0x28)\
    \ != 0)\n    std::set<Person*, std::l...*>, std::allocator<Person*> >::insert(*(arg1\
    \ + 0x28) + 0x30)\n*std::map<std::__cxx11::b...ar> > const, Person*> > >::operator[](Person::ALL)\
    \ = arg1\nif ((rax ^ *(fsbase + 0x28)) == 0)\n    return \n__stack_chk_fail()\n\
    noreturn"
  "llil": |-
    block1:
      push(rbp)
      rbp = rsp {__saved_rbp}
      push(rbx)
      rsp = rsp - 0x38
      [rbp - 0x28 {var_30}].q = rdi
      [rbp - 0x30 {var_38}].q = rsi
      [rbp - 0x38 {var_40}].q = rdx
      [rbp - 0x40 {var_48}].q = rcx
      rax = [fsbase + 0x28].q
      [rbp - 0x18 {var_20}].q = rax
      eax = 0
      rax = [rbp - 0x28 {var_30}].q
      rdi = rax
      call(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev)
      rax = [rbp - 0x28 {var_30}].q
      rax = rax + 0x30
      rdi = rax
      call(_ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EEC1Ev)
      rax = [rbp - 0x28 {var_30}].q
      rdx = [rbp - 0x30 {var_38}].q
      rsi = rdx
      rdi = rax
      call(_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_)
      rax = [rbp - 0x38 {var_40}].q
      rdi = rax
      call(_ZN6Person4findERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
      rdx = [rbp - 0x28 {var_30}].q
      [rdx + 0x20].q = rax
      rax = [rbp - 0x40 {var_48}].q
      rdi = rax
      call(_ZN6Person4findERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE)
      rdx = [rbp - 0x28 {var_30}].q
      [rdx + 0x28].q = rax
      rax = [rbp - 0x28 {var_30}].q
      rax = [rax + 0x20].q
      if (rax == 0) block2 else block3
    block2:
      rax = [rbp - 0x28 {var_30}].q
      rax = [rax + 0x28].q
      if (rax == 0) block4 else block5
    block3:
      rax = [rbp - 0x28 {var_30}].q
      rax = [rax + 0x20].q
      rdx = rax + 0x30
      rax = [rbp - 0x28 {var_30}].q
      [rbp - 0x20 {var_28_1}].q = rax
      rax = rbp - 0x20 {var_28}
      rsi = rax {var_28}
      rdi = rdx
      call(_ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EE6insertEOS1_)
      goto block2
    block4:
      rbx = [rbp - 0x28 {var_30}].q
      rax = [rbp - 0x30 {var_38}].q
      rsi = rax
      rdi = 0xc3a0
      call(_ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP6PersonSt4lessIS5_ESaISt4pairIKS5_S7_EEEixERSB_)
      [rax].q = rbx
      rax = [rbp - 0x18 {var_20}].q
      rax = rax ^ [fsbase + 0x28].q
      if (rax == 0) block6 else block7
    block5:
      rax = [rbp - 0x28 {var_30}].q
      rax = [rax + 0x28].q
      rdx = rax + 0x30
      rax = [rbp - 0x28 {var_30}].q
      [rbp - 0x20 {var_28_2}].q = rax
      rax = rbp - 0x20 {var_28}
      rsi = rax {var_28}
      rdi = rdx
      call(_ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EE6insertEOS1_)
      goto block4
    block6:
      rsp = rsp + 0x38
      rbx = pop
      rbp = pop
      <return> jump(pop)
    block7:
      goto block8
    block8:
      call(__stack_chk_fail)
      noreturn
  "mlil": "block1:\n  var_30 = arg1\n  var_38 = arg2\n  var_40 = arg3\n  var_48 =\
    \ rcx\n  rax = [fsbase + 0x28].q\n  var_20 = rax\n  rax_1 = var_30\n  rdi = rax_1\n\
    \  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev()\n  rax_2 = var_30\n\
    \  rax_3 = rax_2 + 0x30\n  rdi_1 = rax_3\n  _ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EEC1Ev()\n\
    \  rax_4 = var_30\n  rdx = var_38\n  rsi = rdx\n  rdi_2 = rax_4\n  _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_(rdi_2)\n\
    \  rax_5 = var_40\n  rdi_3 = rax_5\n  _ZN6Person4findERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(rdi_3)\n\
    \  rdx_1 = var_30\n  [rdx_1 + 0x20].q = rax_6\n  rax_7 = var_48\n  rdi_4 = rax_7\n\
    \  _ZN6Person4findERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(rdi_4)\n\
    \  rdx_2 = var_30\n  [rdx_2 + 0x28].q = rax_8\n  rax_9 = var_30\n  rax_10 = [rax_9\
    \ + 0x20].q\n  if (rax_10 == 0) block2 else block3\nblock2:\n  rax_14 = var_30\n\
    \  rax_15 = [rax_14 + 0x28].q\n  if (rax_15 == 0) block4 else block5\nblock3:\n\
    \  rax_11 = var_30\n  rax_12 = [rax_11 + 0x20].q\n  rdx_3 = rax_12 + 0x30\n  rax_13\
    \ = var_30\n  var_28_1 = rax_13\n  rdi_5 = rdx_3\n  _ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EE6insertEOS1_(rdi_5)\n\
    \  goto block2\nblock4:\n  rbx = var_30\n  rax_19 = var_38\n  rsi_1 = rax_19\n\
    \  _ZNSt3mapINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEP6PersonSt4lessIS5_ESaISt4pairIKS5_S7_EEEixERSB_(0xc3a0)\n\
    \  [rax_20].q = rbx\n  rax_21 = var_20\n  rax_22 = rax_21 ^ [fsbase + 0x28].q\n\
    \  if (rax_22 == 0) block6 else block7\nblock5:\n  rax_16 = var_30\n  rax_17 =\
    \ [rax_16 + 0x28].q\n  rdx_4 = rax_17 + 0x30\n  rax_18 = var_30\n  var_28_2 =\
    \ rax_18\n  rdi_6 = rdx_4\n  _ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EE6insertEOS1_(rdi_6)\n\
    \  goto block4\nblock6:\n  return \nblock7:\n  goto block8\nblock8:\n  __stack_chk_fail()\n\
    \  noreturn"
"_ZNK6Person11descendantsEv":
  "hlil": |-
    void* fsbase
    int64_t rax = *(fsbase + 0x28)
    std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Person*> >* rdi
    std::set<Person*, std::l...son*>, std::allocator<Person*> >::set(rdi)
    int64_t var_78 = std::set<Person*, std::l...n*>, std::allocator<Person*> >::begin()
    int64_t var_70 = std::set<Person*, std::l...son*>, std::allocator<Person*> >::end()
    while (true)
        if (std::operator!=(&var_78, &var_70) == 0)
            break
        *std::_Rb_tree_const_iterator<Person*>::operator*()
        Person::descendants()
        std::set<Person*, std::l...erson*> >::merge<std::less<Person*> >(rdi)
        std::set<Person*, std::l...on*>, std::allocator<Person*> >::~set()
        std::_Rb_tree_const_iterator<Person*>::operator++(&var_78)
    if ((rax ^ *(fsbase + 0x28)) == 0)
        return rdi
    __stack_chk_fail()
    noreturn
  "llil": |-
    block1:
      push(rbp)
      rbp = rsp {__saved_rbp}
      push(rbx)
      rsp = rsp - 0x78
      [rbp - 0x78 {var_80}].q = rdi
      [rbp - 0x80 {var_88}].q = rsi
      rax = [fsbase + 0x28].q
      [rbp - 0x18 {var_20}].q = rax
      eax = 0
      rax = [rbp - 0x80 {var_88}].q
      rdx = rax + 0x30
      rax = [rbp - 0x78 {var_80}].q
      rsi = rdx
      rdi = rax
      call(_ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EEC2ERKS5_)
      rax = [rbp - 0x80 {var_88}].q
      rax = rax + 0x30
      [rbp - 0x60 {var_68}].q = rax
      rax = [rbp - 0x60 {var_68}].q
      rdi = rax
      call(_ZNKSt3setIP6PersonSt4lessIS1_ESaIS1_EE5beginEv)
      [rbp - 0x70 {var_78}].q = rax
      rax = [rbp - 0x60 {var_68}].q
      rdi = rax
      call(_ZNKSt3setIP6PersonSt4lessIS1_ESaIS1_EE3endEv)
      [rbp - 0x68 {var_70}].q = rax
      goto block2
    block2:
      rdx = rbp - 0x68 {var_70}
      rax = rbp - 0x70 {var_78}
      rsi = rdx {var_70}
      rdi = rax {var_78}
      call(_ZStneRKSt23_Rb_tree_const_iteratorIP6PersonES4_)
      if (al == 0) block3 else block4
    block3:
      rax = [rbp - 0x18 {var_20}].q
      rax = rax ^ [fsbase + 0x28].q
      if (rax == 0) block5 else block6
    block4:
      rax = rbp - 0x70 {var_78}
      rdi = rax {var_78}
      call(_ZNKSt23_Rb_tree_const_iteratorIP6PersonEdeEv)
      rax = [rax].q
      [rbp - 0x58 {var_60_1}].q = rax
      rax = rbp - 0x50 {var_58}
      rdx = [rbp - 0x58 {var_60_1}].q
      rsi = rdx
      rdi = rax {var_58}
      call(_ZNK6Person11descendantsEv)
      rdx = rbp - 0x50 {var_58}
      rax = [rbp - 0x78 {var_80}].q
      rsi = rdx {var_58}
      rdi = rax
      call(_ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EE5mergeIS3_EEvOS_IS1_T_S4_E)
      rax = rbp - 0x50 {var_58}
      rdi = rax {var_58}
      call(_ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EED2Ev)
      rax = rbp - 0x70 {var_78}
      rdi = rax {var_78}
      call(_ZNSt23_Rb_tree_const_iteratorIP6PersonEppEv)
      goto block2
    block5:
      rax = [rbp - 0x78 {var_80}].q
      rsp = rsp + 0x78
      rbx = pop
      rbp = pop
      <return> jump(pop)
    block6:
      call(__stack_chk_fail)
      noreturn
  "mlil": |-
    block1:
      var_80 = rdi
      var_88 = rsi
      rax = [fsbase + 0x28].q
      var_20 = rax
      rax_1 = var_88
      rdx = rax_1 + 0x30
      rax_2 = var_80
      rsi_1 = rdx
      rdi_1 = rax_2
      _ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EEC2ERKS5_(rdi_1)
      rax_3 = var_88
      rax_4 = rax_3 + 0x30
      var_68 = rax_4
      rax_5 = var_68
      rdi_2 = rax_5
      _ZNKSt3setIP6PersonSt4lessIS1_ESaIS1_EE5beginEv()
      var_78 = rax_6
      rax_7 = var_68
      rdi_3 = rax_7
      _ZNKSt3setIP6PersonSt4lessIS1_ESaIS1_EE3endEv()
      var_70 = rax_8
      goto block2
    block2:
      rsi_2 = &var_70
      rdi_4 = &var_78
      _ZStneRKSt23_Rb_tree_const_iteratorIP6PersonES4_(rdi_4, rsi_2)
      if (rax_9 == 0) block3 else block4
    block3:
      rax_13 = var_20
      rax_14 = rax_13 ^ [fsbase + 0x28].q
      if (rax_14 == 0) block5 else block6
    block4:
      _ZNKSt23_Rb_tree_const_iteratorIP6PersonEdeEv()
      rax_11 = [rax_10].q
      var_60_1 = rax_11
      rdx_1 = var_60_1
      rsi_3 = rdx_1
      _ZNK6Person11descendantsEv()
      rax_12 = var_80
      rdi_5 = rax_12
      _ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EE5mergeIS3_EEvOS_IS1_T_S4_E(rdi_5)
      _ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EED2Ev()
      rdi_6 = &var_78
      _ZNSt23_Rb_tree_const_iteratorIP6PersonEppEv(rdi_6)
      goto block2
    block5:
      rax_15 = var_80
      return rax_15
    block6:
      __stack_chk_fail()
      noreturn
"_ZNK6Person9ancestorsEv":
  "hlil": |-
    void* fsbase
    int64_t rax = *(fsbase + 0x28)
    std::set<Person*, std::l...son*>, std::allocator<Person*> >::set()
    void* rsi
    void* rdi
    if (*(rsi + 0x20) != 0)
        *(rsi + 0x20)
        Person::ancestors()
        std::set<Person*, std::l...erson*> >::merge<std::less<Person*> >(rdi)
        std::set<Person*, std::l...on*>, std::allocator<Person*> >::~set()
        std::set<Person*, std::l...*>, std::allocator<Person*> >::insert(rdi)
    if (*(rsi + 0x28) != 0)
        *(rsi + 0x28)
        Person::ancestors()
        std::set<Person*, std::l...erson*> >::merge<std::less<Person*> >(rdi)
        std::set<Person*, std::l...on*>, std::allocator<Person*> >::~set()
        std::set<Person*, std::l...*>, std::allocator<Person*> >::insert(rdi)
    if ((rax ^ *(fsbase + 0x28)) == 0)
        return rdi
    __stack_chk_fail()
    noreturn
  "llil": |-
    block1:
      push(rbp)
      rbp = rsp {__saved_rbp}
      push(rbx)
      rsp = rsp - 0x58
      [rbp - 0x58 {var_60}].q = rdi
      [rbp - 0x60 {var_68}].q = rsi
      rax = [fsbase + 0x28].q
      [rbp - 0x18 {var_20}].q = rax
      eax = 0
      rax = [rbp - 0x58 {var_60}].q
      rdi = rax
      call(_ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EEC1Ev)
      rax = [rbp - 0x60 {var_68}].q
      rax = [rax + 0x20].q
      if (rax == 0) block2 else block3
    block2:
      rax = [rbp - 0x60 {var_68}].q
      rax = [rax + 0x28].q
      if (rax == 0) block4 else block5
    block3:
      rax = [rbp - 0x60 {var_68}].q
      rdx = [rax + 0x20].q
      rax = rbp - 0x50 {var_58}
      rsi = rdx
      rdi = rax {var_58}
      call(_ZNK6Person9ancestorsEv)
      rdx = rbp - 0x50 {var_58}
      rax = [rbp - 0x58 {var_60}].q
      rsi = rdx {var_58}
      rdi = rax
      call(_ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EE5mergeIS3_EEvOS_IS1_T_S4_E)
      rax = rbp - 0x50 {var_58}
      rdi = rax {var_58}
      call(_ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EED2Ev)
      rax = [rbp - 0x60 {var_68}].q
      rdx = rax + 0x20
      rax = [rbp - 0x58 {var_60}].q
      rsi = rdx
      rdi = rax
      call(_ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EE6insertERKS1_)
      goto block2
    block4:
      rax = [rbp - 0x18 {var_20}].q
      rax = rax ^ [fsbase + 0x28].q
      if (rax == 0) block6 else block7
    block5:
      rax = [rbp - 0x60 {var_68}].q
      rdx = [rax + 0x28].q
      rax = rbp - 0x50 {var_58}
      rsi = rdx
      rdi = rax {var_58}
      call(_ZNK6Person9ancestorsEv)
      rdx = rbp - 0x50 {var_58}
      rax = [rbp - 0x58 {var_60}].q
      rsi = rdx {var_58}
      rdi = rax
      call(_ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EE5mergeIS3_EEvOS_IS1_T_S4_E)
      rax = rbp - 0x50 {var_58}
      rdi = rax {var_58}
      call(_ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EED2Ev)
      rax = [rbp - 0x60 {var_68}].q
      rdx = rax + 0x28
      rax = [rbp - 0x58 {var_60}].q
      rsi = rdx
      rdi = rax
      call(_ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EE6insertERKS1_)
      goto block4
    block6:
      rax = [rbp - 0x58 {var_60}].q
      rsp = rsp + 0x58
      rbx = pop
      rbp = pop
      <return> jump(pop)
    block7:
      call(__stack_chk_fail)
      noreturn
  "mlil": |-
    block1:
      var_60 = rdi
      var_68 = rsi
      rax = [fsbase + 0x28].q
      var_20 = rax
      rax_1 = var_60
      rdi_1 = rax_1
      _ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EEC1Ev()
      rax_2 = var_68
      rax_3 = [rax_2 + 0x20].q
      if (rax_3 == 0) block2 else block3
    block2:
      rax_8 = var_68
      rax_9 = [rax_8 + 0x28].q
      if (rax_9 == 0) block4 else block5
    block3:
      rax_4 = var_68
      rdx_1 = [rax_4 + 0x20].q
      rsi_1 = rdx_1
      _ZNK6Person9ancestorsEv()
      rax_5 = var_60
      rdi_2 = rax_5
      _ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EE5mergeIS3_EEvOS_IS1_T_S4_E(rdi_2)
      _ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EED2Ev()
      rax_6 = var_68
      rdx_2 = rax_6 + 0x20
      rax_7 = var_60
      rsi_2 = rdx_2
      rdi_3 = rax_7
      _ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EE6insertERKS1_(rdi_3)
      goto block2
    block4:
      rax_14 = var_20
      rax_15 = rax_14 ^ [fsbase + 0x28].q
      if (rax_15 == 0) block6 else block7
    block5:
      rax_10 = var_68
      rdx_3 = [rax_10 + 0x28].q
      rsi_3 = rdx_3
      _ZNK6Person9ancestorsEv()
      rax_11 = var_60
      rdi_4 = rax_11
      _ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EE5mergeIS3_EEvOS_IS1_T_S4_E(rdi_4)
      _ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EED2Ev()
      rax_12 = var_68
      rdx_4 = rax_12 + 0x28
      rax_13 = var_60
      rsi_4 = rdx_4
      rdi_5 = rax_13
      _ZNSt3setIP6PersonSt4lessIS1_ESaIS1_EE6insertERKS1_(rdi_5)
      goto block4
    block6:
      rax_16 = var_60
      return rax_16
    block7:
      __stack_chk_fail()
      noreturn
