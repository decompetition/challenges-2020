"main.main":
  "asm": |
    main.main:
      mov     rcx, fs:[-8]
      cmp     rsp, [rcx+0x10]
      jbe     block24
    block1:
      sub     rsp, 0x70
      mov     [rsp+0x68], rbp
      lea     rbp, [rsp+0x68]
      mov     rcx, [mem1]
      mov     rdx, [os.Args]
      cmp     rcx, 1
      jbe     block23
    block2:
      mov     rax, [rdx+0x10]
      mov     rcx, [rdx+0x18]
      mov     [rsp], rax
      mov     [rsp+8], rcx
      call    strconv.Atoi
      mov     rax, [rsp+0x10]
      mov     [rsp+0x40], rax
      lea     rcx, [mem2]
      mov     [rsp], rcx
      call    runtime.newobject
      mov     rax, [rsp+8]
      cmp     [runtime.writeBarrier], 0
      jne     block20
    block3:
      mov     [rax], rax
      mov     [rax+8], rax
    block4:
      mov     [rsp+0x50], rax
      mov     [rax+0x28], 0
      mov     [rsp], rax
      lea     rcx, [mem3]
      mov     [rsp+8], rcx
      lea     rdx, [mem4]
      mov     [rsp+0x10], rdx
      call    container/list.(*List).PushFront
      mov     rax, [rsp+0x50]
      mov     [rsp], rax
      lea     rcx, [mem3]
      mov     [rsp+8], rcx
      lea     rdx, [mem5]
      mov     [rsp+0x10], rdx
      call    container/list.(*List).PushFront
      mov     rax, [rsp+0x40]
      mov     rcx, [rsp+0x50]
      xor     edx, edx
      jmp     block6
    block5:
      mov     [rsp+0x48], rdx
      add     rbx, [rsi]
      mov     [rsp], rbx
      call    runtime.convT64
      mov     rax, [rsp+8]
      mov     rcx, [rsp+0x50]
      mov     [rsp], rcx
      lea     rdx, [mem3]
      mov     [rsp+8], rdx
      mov     [rsp+0x10], rax
      call    container/list.(*List).PushFront
      mov     rax, [rsp+0x48]
      lea     rdx, [rax+1]
      mov     rax, [rsp+0x40]
      mov     rcx, [rsp+0x50]
    block6:
      cmp     rdx, rax
      jge     block16
    block7:
      cmp     [rcx+0x28], 0
      jne     block15
    block8:
      xor     ebx, ebx
    block9:
      mov     rsi, [rbx]
      mov     rdi, [rbx+0x10]
      test    rdi, rdi
      je      block14
    block10:
      cmp     rsi, rdi
      je      block14
    block11:
      mov     rdi, [rbx+0x18]
      mov     rbx, [rbx+0x20]
      lea     r8, [mem3]
      cmp     rdi, r8
      jne     block22
    block12:
      mov     rbx, [rbx]
      mov     rdi, [rsi+0x18]
      mov     rsi, [rsi+0x20]
      cmp     rdi, r8
      je      block5
    block13:
      jmp     block21
    block14:
      xor     esi, esi
      jmp     block11
    block15:
      mov     rbx, [rcx]
      jmp     block9
    block16:
      cmp     [rcx+0x28], 0
      jne     block19
    block17:
      xor     eax, eax
    block18:
      mov     rcx, [rax+0x20]
      mov     rax, [rax+0x18]
      xorps   xmm0, xmm0
      movups  [rsp+0x58], xmm0
      mov     [rsp+0x58], rax
      mov     [rsp+0x60], rcx
      mov     rax, [os.Stdout]
      lea     rcx, [go.itab.*os.File,io.Writer]
      mov     [rsp], rcx
      mov     [rsp+8], rax
      lea     rax, [rsp+0x58]
      mov     [rsp+0x10], rax
      mov     [rsp+0x18], 1
      mov     [rsp+0x20], 1
      call    fmt.Fprintln
      mov     rbp, [rsp+0x68]
      add     rsp, 0x70
      ret
    block19:
      mov     rax, [rcx]
      jmp     block18
    block20:
      mov     rdi, rax
      call    runtime.gcWriteBarrier
      lea     rcx, [rax+8]
      mov     rdi, rcx
      call    runtime.gcWriteBarrier
      jmp     block4
    block21:
      mov     [rsp], rdi
      mov     [rsp+8], r8
      lea     rax, [mem6]
      mov     [rsp+0x10], rax
      call    runtime.panicdottypeE
    block22:
      mov     [rsp], rdi
      mov     [rsp+8], r8
      lea     rax, [mem6]
      mov     [rsp+0x10], rax
      call    runtime.panicdottypeE
    block23:
      mov     eax, 1
      call    runtime.panicIndex
    block24:
      call    runtime.morestack_noctxt
      jmp     main.main
